>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[2, 4, 6], [8, 10, 12]], 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided([[-2, 4, -6], [8, -10, 12]], -2)
[[1.0, -2.0, 3.0], [-4.0, 5.0, -6.0]]

>>> matrix_divided([['a', 'b', 'c'], [8, 10, 12]], -2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [8, 10, 12, 14]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([1, 0, 0], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("clearly not a list", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3]], "clearlynotnum")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [8, 10, 12, 14]], 1)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [10, 12, 14]], "string")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[2, 4, 6], [8, 10, 12]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[2, 4, 6], [8, 10, 12]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
